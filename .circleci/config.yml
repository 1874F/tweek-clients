version: 2
jobs:
  build:
    working_directory: ~/tweek-clients

    environment:
      NODE_ENV: development

    docker:
      - image: node:6.10.1
    
    steps:
      - checkout

      - setup_remote_docker:
          reusable: true

      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
            curl -L -o /usr/bin/docker-compose "https://github.com/docker/compose/releases/download/1.11.2/docker-compose-$(uname -s)-$(uname -m)"
            chmod +x /usr/bin/docker-compose

      - run: 
          name: pull dependencies
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker-compose pull
 
      - run:
          name: start dependencies
          command: docker-compose up -d
     
      - restore_cache:
          keys:
            - yarn-cache-{{ .Branch }}-{{ checksum "services/editor/yarn.lock" }}
            - yarn-cache-{{ .Branch }}
            - yarn-cache-master
            - yarn-cache-

      - run:
          name: yarn install
          command: |
            cd ~/tweek-clients/js/tweek-repo && yarn --cache-folder "/.yarn-cache"
            cd ~/tweek-clients/js/tweek-rest && yarn --cache-folder "/.yarn-cache"
            cd ~/tweek-clients/js/react-tweek && yarn --cache-folder "/.yarn-cache"

      - save_cache:
          key: yarn-cache-{{ .Branch }}-{{ checksum "services/editor/yarn.lock" }}
          paths:
            - ~/tweek-clients/js/tweek-repo/.yarn-cache
            - ~/tweek-clients/js/tweek-rest/.yarn-cache
            - ~/tweek-clients/js/react-tweek/.yarn-cache
            
      - run:
          name: Prepare for tests
          command: |
            docker run --network=dev_default node:6.10.1-slim wget --tries 20 --timeout=15 --read-timeout=20 --waitretry=30 --retry-connrefused http://tweek-api/status

      - run: 
          name: Test tweek-rest
          working_directory: ~/tweek-clients/js/tweek-rest
          command: yarn test

      - run: 
          name: Test tweek-repo
          working_directory: ~/tweek-clients/js/tweek-repo
          command: yarn test

      - run: 
          name: Test react-tweek
          working_directory: ~/tweek-clients/js/react-tweek
          command: yarn test

      - deploy: 
          name: npm
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
              if [[ $(node -p -e "require('./js/tweek-rest/package.json').version") != $(npm show @npmsoluto/tweek-rest version) ]]; then
                echo "publish tweek-rest"
                cd js/tweek-rest && npm publish
              fi
              if [[ $(node -p -e "require('./js/tweek-repo/package.json').version") != $(npm show @npmsoluto/tweek-repo version) ]]; then
                echo "publish tweek-repo"
                cd js/tweek-repo && npm publish
              fi
              if [[ $(node -p -e "require('./js/react-tweek/package.json').version") != $(npm show @npmsoluto/react-tweek version) ]]; then
                echo "publish react-tweek"
                cd js/react-tweek && npm publish
              fi
            else 
              echo "not deploying on non master branches"
            fi
